name: Test

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test imports
      run: |
        python -c "from radarr_sonarr_mcp import server"
        python -c "from radarr_sonarr_mcp.tools_extended import get_extended_tools"
        python -c "from radarr_sonarr_mcp.config import load_config"
    
    - name: Test MCP server initialization
      run: |
        # Test that the server can be imported and tools listed
        python -c "
import asyncio
from radarr_sonarr_mcp.server import handle_list_tools
async def test():
    tools = await handle_list_tools()
    assert len(tools) == 28, f'Expected 28 tools, got {len(tools)}'
    print(f'âœ“ Found all {len(tools)} tools')
asyncio.run(test())
        "